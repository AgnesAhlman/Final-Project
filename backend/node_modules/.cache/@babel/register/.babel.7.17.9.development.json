{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\golde\\\\Desktop\\\\Code\\\\Repo\\\\Final-Project\\\\Final-Project\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\golde\\\\Desktop\\\\Code\\\\Repo\\\\Final-Project\\\\Final-Project\\\\backend\",\"filename\":\"C:\\\\Users\\\\golde\\\\Desktop\\\\Code\\\\Repo\\\\Final-Project\\\\Final-Project\\\\backend\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\golde\\\\Desktop\\\\Code\\\\Repo\\\\Final-Project\\\\Final-Project\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/final-project\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; // Defines the port the app will run on. Defaults to 8080, but can be overridden\n// when starting the server. Example command to overwrite PORT env variable value:\n// PORT=9000 npm start\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json()); /////// Monday\n\nvar UserSchema = new _mongoose[\"default\"].Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true /// My_B4nK_P4$$word\n\n  },\n  // npm install crypto\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString(\"hex\");\n    }\n  }\n});\n\nvar User = _mongoose[\"default\"].model(\"User\", UserSchema);\n\napp.post(\"/register\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, username, password, salt, newUser;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, username = _req$body.username, password = _req$body.password; // npm install bcrypt\n            // const code = [1, 2, 4, 4];\n            // const makeCodeSecret = (codeArr) => {\n            // const secretMessage = codeArr.map(singleNumber => singleNumber + 1);\n            // return secretMessage\n            //}\n            // transformedCode = makeCodeSecret(code)\n\n            _context.prev = 1;\n            salt = _bcrypt[\"default\"].genSaltSync();\n\n            if (!(password.length < 8)) {\n              _context.next = 7;\n              break;\n            }\n\n            res.status(400).json({\n              success: false,\n              response: \"Password must be at least 8 characters long\"\n            });\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return new User({\n              username: username,\n              password: _bcrypt[\"default\"].hashSync(password, salt)\n            }).save();\n\n          case 9:\n            newUser = _context.sent;\n            res.status(201).json({\n              success: true,\n              response: {\n                username: newUser.username,\n                accessToken: newUser.accessToken,\n                id: newUser._id\n              }\n            });\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              response: _context.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post(\"/login\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, username, password, user;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, username = _req$body2.username, password = _req$body2.password;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return User.findOne({\n              username: username\n            });\n\n          case 4:\n            user = _context2.sent;\n\n            if (user && _bcrypt[\"default\"].compareSync(password, user.password)) {\n              res.status(200).json({\n                success: true,\n                response: {\n                  username: user.username,\n                  id: user._id,\n                  accessToken: user.accessToken\n                }\n              });\n            } else {\n              res.status(400).json({\n                success: false,\n                response: \"Credentials didn't match\"\n              });\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(500).json({\n              success: false,\n              response: _context2.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, next) {\n    var accessToken, user;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            accessToken = req.header(\"Authorization\");\n            _context3.prev = 1;\n            _context3.next = 4;\n            return User.findOne({\n              accessToken: accessToken\n            });\n\n          case 4:\n            user = _context3.sent;\n\n            if (user) {\n              next();\n            } else {\n              res.status(401).json({\n                response: \"Please log in\",\n                success: false\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(400).json({\n              response: _context3.t0,\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function authenticateUser(_x5, _x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar ThoughtSchema = new _mongoose[\"default\"].Schema({\n  message: {\n    type: String\n  },\n  createdAt: {\n    type: Date,\n    \"default\": function _default() {\n      return new Date();\n    }\n  },\n  hearts: {\n    type: Number,\n    \"default\": 0\n  }\n});\n\nvar Thought = _mongoose[\"default\"].model(\"Thought\", ThoughtSchema);\n\napp.get(\"/thoughts\", authenticateUser);\napp.get(\"/thoughts\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var thoughts;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Thought.find({});\n\n          case 2:\n            thoughts = _context4.sent;\n            res.status(200).json({\n              success: true,\n              response: thoughts\n            });\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post(\"/thoughts\", authenticateUser);\napp.post(\"/thoughts\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var message, newThought;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            message = req.body.message;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return new Thought({\n              message: message\n            }).save();\n\n          case 4:\n            newThought = _context5.sent;\n            res.status(201).json({\n              success: true,\n              response: newThought\n            });\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](1);\n            res.status(400).json({\n              success: false,\n              response: _context5.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 8]]);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); ///////\n// Start defining your routes here\n\napp.get(\"/\", function (req, res) {\n  res.send(\"Hello Technigo!\");\n}); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"sources":["server.js"],"names":["mongoUrl","process","env","MONGO_URL","mongoose","connect","useNewUrlParser","useUnifiedTopology","Promise","port","PORT","app","use","express","json","UserSchema","Schema","username","type","String","required","unique","password","accessToken","crypto","randomBytes","toString","User","model","post","req","res","body","salt","bcrypt","genSaltSync","length","status","success","response","hashSync","save","newUser","id","_id","findOne","user","compareSync","authenticateUser","next","header","ThoughtSchema","message","createdAt","Date","hearts","Number","Thought","get","find","thoughts","newThought","send","listen","console","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,mCAA1C;;AACAC,qBAASC,OAAT,CAAiBL,QAAjB,EAA2B;AAAEM,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA3B;;AACAH,qBAASI,OAAT,GAAmBA,OAAnB,C,CAEA;AACA;AACA;;AACA,IAAMC,IAAI,GAAGR,OAAO,CAACC,GAAR,CAAYQ,IAAZ,IAAoB,IAAjC;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR,E,CACA;;AACA,IAAMC,UAAU,GAAG,IAAIX,qBAASY,MAAb,CAAoB;AACrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRC,IAAAA,MAAM,EAAE;AAHA,GAD2B;AAMrCC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF,CAGR;;AAHQ,GAN2B;AAWrC;AACAG,EAAAA,WAAW,EAAE;AACXL,IAAAA,IAAI,EAAEC,MADK;AAEX,eAAS;AAAA,aAAMK,mBAAOC,WAAP,CAAmB,GAAnB,EAAwBC,QAAxB,CAAiC,KAAjC,CAAN;AAAA;AAFE;AAZwB,CAApB,CAAnB;;AAkBA,IAAMC,IAAI,GAAGvB,qBAASwB,KAAT,CAAe,MAAf,EAAuBb,UAAvB,CAAb;;AAEAJ,GAAG,CAACkB,IAAJ,CAAS,WAAT;AAAA,qEAAsB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACWD,GAAG,CAACE,IADf,EACZf,QADY,aACZA,QADY,EACFK,QADE,aACFA,QADE,EAEtB;AACA;AACA;AACI;AACA;AACJ;AACA;;AARsB;AAUZW,YAAAA,IAVY,GAULC,mBAAOC,WAAP,EAVK;;AAAA,kBAWdb,QAAQ,CAACc,MAAT,GAAkB,CAXJ;AAAA;AAAA;AAAA;;AAYhBL,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnBwB,cAAAA,OAAO,EAAE,KADU;AAEnBC,cAAAA,QAAQ,EAAE;AAFS,aAArB;AAZgB;AAAA;;AAAA;AAAA;AAAA,mBAiBM,IAAIZ,IAAJ,CAAS;AAACV,cAAAA,QAAQ,EAAEA,QAAX;AAAqBK,cAAAA,QAAQ,EAAEY,mBAAOM,QAAP,CAAgBlB,QAAhB,EAA0BW,IAA1B;AAA/B,aAAT,EAA0EQ,IAA1E,EAjBN;;AAAA;AAiBVC,YAAAA,OAjBU;AAkBhBX,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnBwB,cAAAA,OAAO,EAAE,IADU;AAEnBC,cAAAA,QAAQ,EAAE;AACRtB,gBAAAA,QAAQ,EAAEyB,OAAO,CAACzB,QADV;AAERM,gBAAAA,WAAW,EAAEmB,OAAO,CAACnB,WAFb;AAGRoB,gBAAAA,EAAE,EAAED,OAAO,CAACE;AAHJ;AAFS,aAArB;;AAlBgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BhBb,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnBwB,cAAAA,OAAO,EAAE,KADU;AAEnBC,cAAAA,QAAQ;AAFW,aAArB;;AA5BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAmCA5B,GAAG,CAACkB,IAAJ,CAAS,QAAT;AAAA,sEAAmB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACcD,GAAG,CAACE,IADlB,EACTf,QADS,cACTA,QADS,EACCK,QADD,cACCA,QADD;AAAA;AAAA;AAAA,mBAIIK,IAAI,CAACkB,OAAL,CAAa;AAAC5B,cAAAA,QAAQ,EAARA;AAAD,aAAb,CAJJ;;AAAA;AAIT6B,YAAAA,IAJS;;AAKf,gBAAIA,IAAI,IAAIZ,mBAAOa,WAAP,CAAmBzB,QAAnB,EAA6BwB,IAAI,CAACxB,QAAlC,CAAZ,EAAyD;AACvDS,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnBwB,gBAAAA,OAAO,EAAE,IADU;AAEnBC,gBAAAA,QAAQ,EAAE;AACRtB,kBAAAA,QAAQ,EAAE6B,IAAI,CAAC7B,QADP;AAER0B,kBAAAA,EAAE,EAAEG,IAAI,CAACF,GAFD;AAGRrB,kBAAAA,WAAW,EAAEuB,IAAI,CAACvB;AAHV;AAFS,eAArB;AAQD,aATD,MASO;AACLQ,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnBwB,gBAAAA,OAAO,EAAE,KADU;AAEnBC,gBAAAA,QAAQ,EAAE;AAFS,eAArB;AAID;;AAnBc;AAAA;;AAAA;AAAA;AAAA;AAqBfR,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnBwB,cAAAA,OAAO,EAAE,KADU;AAEnBC,cAAAA,QAAQ;AAFW,aAArB;;AArBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AA4BA,IAAMS,gBAAgB;AAAA,sEAAG,kBAAOlB,GAAP,EAAYC,GAAZ,EAAiBkB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB1B,YAAAA,WADiB,GACHO,GAAG,CAACoB,MAAJ,CAAW,eAAX,CADG;AAAA;AAAA;AAAA,mBAGFvB,IAAI,CAACkB,OAAL,CAAa;AAACtB,cAAAA,WAAW,EAAEA;AAAd,aAAb,CAHE;;AAAA;AAGfuB,YAAAA,IAHe;;AAIrB,gBAAIA,IAAJ,EAAU;AACRG,cAAAA,IAAI;AACL,aAFD,MAEO;AACLlB,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnByB,gBAAAA,QAAQ,EAAE,eADS;AAEnBD,gBAAAA,OAAO,EAAE;AAFU,eAArB;AAID;;AAXoB;AAAA;;AAAA;AAAA;AAAA;AAarBP,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACnByB,cAAAA,QAAQ,cADW;AAEnBD,cAAAA,OAAO,EAAE;AAFU,aAArB;;AAbqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBU,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAoBA,IAAMG,aAAa,GAAG,IAAI/C,qBAASY,MAAb,CAAoB;AACxCoC,EAAAA,OAAO,EAAE;AACPlC,IAAAA,IAAI,EAAEC;AADC,GAD+B;AAIxCkC,EAAAA,SAAS,EAAE;AACTnC,IAAAA,IAAI,EAAEoC,IADG;AAET,eAAS;AAAA,aAAM,IAAIA,IAAJ,EAAN;AAAA;AAFA,GAJ6B;AAQxCC,EAAAA,MAAM,EAAE;AACNrC,IAAAA,IAAI,EAAEsC,MADA;AAEN,eAAS;AAFH;AARgC,CAApB,CAAtB;;AAeA,IAAMC,OAAO,GAAGrD,qBAASwB,KAAT,CAAe,SAAf,EAA0BuB,aAA1B,CAAhB;;AAEAxC,GAAG,CAAC+C,GAAJ,CAAQ,WAAR,EAAqBV,gBAArB;AACArC,GAAG,CAAC+C,GAAJ,CAAQ,WAAR;AAAA,sEAAqB,kBAAO5B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI0B,OAAO,CAACE,IAAR,CAAa,EAAb,CADJ;;AAAA;AACbC,YAAAA,QADa;AAEnB7B,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAACwB,cAAAA,OAAO,EAAE,IAAV;AAAgBC,cAAAA,QAAQ,EAAEqB;AAA1B,aAArB;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;AAKAjD,GAAG,CAACkB,IAAJ,CAAS,WAAT,EAAsBmB,gBAAtB;AACArC,GAAG,CAACkB,IAAJ,CAAS,WAAT;AAAA,sEAAsB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACZqB,YAAAA,OADY,GACAtB,GAAG,CAACE,IADJ,CACZoB,OADY;AAAA;AAAA;AAAA,mBAGO,IAAIK,OAAJ,CAAY;AAACL,cAAAA,OAAO,EAAPA;AAAD,aAAZ,EAAuBX,IAAvB,EAHP;;AAAA;AAGZoB,YAAAA,UAHY;AAIlB9B,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAACwB,cAAAA,OAAO,EAAE,IAAV;AAAgBC,cAAAA,QAAQ,EAAEsB;AAA1B,aAArB;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAMlB9B,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAACwB,cAAAA,OAAO,EAAE,KAAV;AAAiBC,cAAAA,QAAQ;AAAzB,aAArB;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA,K,CAUA;AACA;;AACA5B,GAAG,CAAC+C,GAAJ,CAAQ,GAAR,EAAa,UAAC5B,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAAC+B,IAAJ,CAAS,iBAAT;AACD,CAFD,E,CAIA;;AACAnD,GAAG,CAACoD,MAAJ,CAAWtD,IAAX,EAAiB,YAAM;AACrBuD,EAAAA,OAAO,CAACC,GAAR,8CAAkDxD,IAAlD;AACD,CAFD","sourceRoot":"C:\\Users\\golde\\Desktop\\Code\\Repo\\Final-Project\\Final-Project\\backend\\","sourcesContent":["import express from \"express\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\nimport crypto from \"crypto\";\nimport bcrypt from \"bcrypt\";\n\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/final-project\";\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\n// Defines the port the app will run on. Defaults to 8080, but can be overridden\n// when starting the server. Example command to overwrite PORT env variable value:\n// PORT=9000 npm start\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(express.json());\n/////// Monday\nconst UserSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n    /// My_B4nK_P4$$word\n  },\n  // npm install crypto\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString(\"hex\")\n  }\n});\n\nconst User = mongoose.model(\"User\", UserSchema);\n\napp.post(\"/register\", async (req, res) => {\n  const { username, password } = req.body;\n// npm install bcrypt\n// const code = [1, 2, 4, 4];\n// const makeCodeSecret = (codeArr) => {\n    // const secretMessage = codeArr.map(singleNumber => singleNumber + 1);\n    // return secretMessage\n//}\n// transformedCode = makeCodeSecret(code)\n  try {\n    const salt = bcrypt.genSaltSync();\n    if (password.length < 8) {\n      res.status(400).json({\n        success: false,\n        response: \"Password must be at least 8 characters long\"\n      });\n    } else {\n      const newUser = await new User({username: username, password: bcrypt.hashSync(password, salt)}).save();\n      res.status(201).json({\n        success: true,\n        response: {\n          username: newUser.username,\n          accessToken: newUser.accessToken,\n          id: newUser._id\n        }\n      });\n    }\n  } catch(error) {\n      res.status(400).json({\n        success: false,\n        response: error\n      });\n  }\n});\n\napp.post(\"/login\", async (req, res) => {\n  const { username, password } = req.body;\n\n  try {\n    const user = await User.findOne({username});\n    if (user && bcrypt.compareSync(password, user.password)) {\n      res.status(200).json({\n        success: true,\n        response: {\n          username: user.username,\n          id: user._id,\n          accessToken: user.accessToken\n        }\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        response: \"Credentials didn't match\"\n      });\n    }\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      response: error\n    });\n  }\n});\n\nconst authenticateUser = async (req, res, next) => {\n  const accessToken = req.header(\"Authorization\");\n  try {\n    const user = await User.findOne({accessToken: accessToken});\n    if (user) {\n      next();\n    } else {\n      res.status(401).json({\n        response: \"Please log in\",\n        success: false\n      })\n    }\n  } catch (error) {\n    res.status(400).json({\n      response: error,\n      success: false\n    })\n  }\n}\n\nconst ThoughtSchema = new mongoose.Schema({\n  message: {\n    type: String,\n  },\n  createdAt: {\n    type: Date,\n    default: () => new Date() \n  },\n  hearts: {\n    type: Number,\n    default: 0\n  }\n}); \n\n\nconst Thought = mongoose.model(\"Thought\", ThoughtSchema);\n\napp.get(\"/thoughts\", authenticateUser);\napp.get(\"/thoughts\", async (req, res)=> {\n  const thoughts = await Thought.find({});\n  res.status(200).json({success: true, response: thoughts});\n});\n\napp.post(\"/thoughts\", authenticateUser)\napp.post(\"/thoughts\", async (req, res) => {\n  const { message } = req.body;\n  try {\n    const newThought = await new Thought({message}).save();\n    res.status(201).json({success: true, response: newThought});\n  } catch (error) {\n    res.status(400).json({success: false, response: error});\n  }\n});\n\n///////\n// Start defining your routes here\napp.get(\"/\", (req, res) => {\n  res.send(\"Hello Technigo!\");\n});\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n"]}},"mtime":1670847849744}}