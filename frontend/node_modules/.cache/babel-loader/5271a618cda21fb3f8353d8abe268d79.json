{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golde\\\\Desktop\\\\Code\\\\Repo\\\\Final-Project\\\\Final-Project\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { API_URL } from \"utils/utils\";\nimport user from \"reducers/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [mode, setMode] = useState(\"login\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const accessToken = useSelector(store => store.user.accessToken);\n  useEffect(() => {\n    if (accessToken) {\n      navigate(\"/\");\n    }\n  }, [accessToken]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    };\n    fetch(API_URL(mode), options).then(response => response.json()).then(data => {\n      if (data.success) {\n        batch(() => {\n          dispatch(user.actions.setUsername(data.response.username));\n          dispatch(user.actions.setUserId(data.response.id));\n          dispatch(user.actions.setAccessToken(data.response.accessToken));\n          dispatch(user.actions.setError(null));\n        });\n      } else {\n        batch(() => {\n          dispatch(user.actions.setUsername(null));\n          dispatch(user.actions.setUserId(null));\n          dispatch(user.actions.setAccessToken(null));\n          dispatch(user.actions.setError(data.response));\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"register\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"register\",\n      checked: mode === \"register\",\n      onChange: () => setMode(\"register\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"login\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"login\",\n      checked: mode === \"login\",\n      onChange: () => setMode(\"login\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"8Hv3oF8aIcCp+u7UgG6YfT9lK6g=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","batch","useNavigate","Link","API_URL","user","Login","username","setUsername","password","setPassword","mode","setMode","dispatch","navigate","accessToken","store","onFormSubmit","event","preventDefault","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","success","actions","setUserId","id","setAccessToken","setError","e","target","value"],"sources":["C:/Users/golde/Desktop/Code/Repo/Final-Project/Final-Project/frontend/src/components/Login.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { API_URL } from \"utils/utils\";\nimport user from \"reducers/user\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [mode, setMode] = useState(\"login\");\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const accessToken = useSelector((store) => store.user.accessToken);\n    useEffect( () => {\n        if (accessToken) {\n            navigate(\"/\");\n        }\n    }, [accessToken])\n\n    const onFormSubmit =(event) => {\n        event.preventDefault();\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({username: username, password: password })\n        }\n        fetch(API_URL(mode), options)\n            .then(response => response.json())\n            .then(data => {\n                if(data.success) {\n                    batch(()=> {\n                        dispatch(user.actions.setUsername(data.response.username));\n                        dispatch(user.actions.setUserId(data.response.id))\n                        dispatch(user.actions.setAccessToken(data.response.accessToken));\n                        dispatch(user.actions.setError(null));\n                    });\n                } else {\n                    batch (() => {\n                        dispatch(user.actions.setUsername(null));\n                        dispatch(user.actions.setUserId(null))\n                        dispatch(user.actions.setAccessToken(null));\n                        dispatch(user.actions.setError(data.response));\n                    });\n                }\n            })\n    }\n    return (\n        <>\n        <label htmlFor=\"register\">Register</label>\n        <input type=\"radio\" id=\"register\" checked={mode === \"register\"} onChange={()=>setMode(\"register\")}/>\n        <label htmlFor=\"login\">Login</label>\n        <input type=\"radio\" id=\"login\" checked={mode === \"login\"} onChange={()=>setMode(\"login\")}/>\n        <form onSubmit={onFormSubmit}>\n            <label htmlFor=\"username\">Username</label>\n            <input \n                type=\"text\" \n                id=\"username\" \n                value={username} \n                onChange={e => setUsername(e.target.value)}/>\n            <label htmlFor=\"password\">Password</label>\n            <input \n                type=\"password\" \n                id=\"password\" \n                value={password} \n                onChange={e => setPassword(e.target.value)}/>\n            <button type=\"submit\">Submit</button>\n        </form>\n    </> \n    );\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}